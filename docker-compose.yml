services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: crypto_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5

  airflow-webserver:
    build: .
    container_name: airflow_webserver
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/crypto_db
      - AIRFLOW__WEBSERVER__WORKERS=1
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
    entrypoint: ["/bin/bash", "-c", "airflow db init && airflow users create --role Admin --username admin --password admin --firstname Admin --lastname User --email admin@example.com && airflow webserver"]

  airflow-scheduler:
    build: .
    container_name: airflow_scheduler
    restart: always
    depends_on:
      airflow-webserver:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/crypto_db
    volumes:
      - ./dags:/opt/airflow/dags
    entrypoint: ["/bin/bash", "-c", "airflow db init && airflow scheduler"]

volumes:
  postgres_data:
